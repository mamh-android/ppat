<%= stylesheet_link_tag  "trigger"%>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-63888868-1', 'auto');
  ga('send', 'pageview');
</script>
<!-- page-container -->
<div class="page-container tab-content"  >
    <!-- Tab #basic -->
    <div class="tab-pane active">
        <!-- Grid row-->
            <div class="row">
                    <div class="control-group">
                        <label class="inline" for="input" style="width:100px;">Image Path:&nbsp;&nbsp;</label>
                        <input id="image_path" class="input-xlarge inline" type="text"  onkeyup= "Image_Path_IndexOf()"/>
                        <!-- get ftp service-->
                        <%android_list=[]%>
                        <%require 'net/ftp' %>
                        <% Net::FTP.open('10.38.120.30') do |ftp| %>
                            <% ftp.login %>
                            <%@files = ftp.chdir('autobuild/')%>
                            <%@files = ftp.list("android")%>
                            <%@files.uniq.each do |fs|%>
                                <%android_list<<fs[55,50].gsub(/\s+/,'')%>
                            <%end%>
                        <%end%>
                        <ul class="on_change" id="on_change">
                        <%android_list.uniq.each do |android_list|%>
                            <li value="<%=android_list%>/" id="1"><%=android_list%>/</li>
                        <%end%>
                        </ul>
                        <p class="help-inline">Image Path should be /autobuild/android/pxa1936/2015-03-31_pxa1936-lp5.1</p>
                    </div>

                     <div class="control-group">
                        <label class="inline" style="width:100px;">Add Specify Image Files:</label>
                        <a class="accordion-toggle btn btn-wuxia btn-inverse" onclick="show('imgFileUpload')" data-toggle="collapse">Add files</a>
                        <div class="plupload" id="imgFileUpload" style="display:none"></div>
                    </div>

                    <div class="control-group">
                        <label class="inline" for="input" style="width:100px;">Purpose:</label>
                        <input id="purpose" class="input-xlarge inline" type="text" />
                        <p class="help-inline">short description of reason for trigger PPAT</p>
                    </div>

                    <div class="control-group">
                        <label class="inline" for="input" style="width:100px;">Device:</label>
                        <select name="Device" onchange="choose_test()" class="form-control">
                            <option value="device">device</option>
                            <option value="pxa1908dkb_tz:pxa1908dkb">pxa1908dkb_tz</option>
                            <option value="pxa1908dkb_dsds:pxa1908dkb">pxa1908dkb_dsds</option>
                            <option value="pxa1908FF_cmcc:pxa1908FF">pxa1908FF_cmcc</option>
                            <option value="pxa1928dkb_tz:pxa1928dkb">pxa1928dkb_tz</option>
                            <option value="pxa1936dkb_tz:pxa1936dkb">pxa1936dkb_tz</option>
                        </select>
                        </div>

                    <div class="control-group" id="DeviceHW" style="display: block;">
                        <%= render :partial => 'device_info' %>
                    </div>

                    <div class="control-group" id="blf">
                        <%= render :partial => 'blf' %>
                    </div>
                    <div class="control-group">
                        <label class="inline" for="input" style="width:100px;">Choose Test:</label>
                        <select name="TestType" onchange="choose_test()" class="form-control">
                            <option>PowerScenario</option>
                            <option>Round PP Tuning</option>
                            <option>Baremetal Power</option>
                        </select>
                    </div>

                    <div class="control-group">
                        <label class="inline" for="input"><span id="test_type">PowerScenario</span></label>
                    </div>
                    <div id="ap_scenario">
                        <%= render :partial => 'ap_scenario' %>
                    </div>

                    <div id="cp_scenario">
                        <%= render :partial => 'cp_scenario' %>
                    </div>

                    <div id="perf_scenario">
                        <%= render :partial => 'perf_scenario' %>
                    </div>

                    <div id="pp_tuning">
                        <%= render :partial => 'round_pp' %>
                    </div>

                    <div id="uboot">
                        <%= render :partial => 'uboot_scenario' %>
                    </div>

                    <div class="control-group">
                        <label class="inline">Add Specify Test Files:</label>
                        <a class="accordion-toggle btn btn-wuxia btn-inverse" onclick="show('testFileUpload')" data-toggle="collapse">Add files</a>
                        <div class="plupload" id="testFileUpload" style="display:none"></div>
                    </div>

                    <div class="control-group" id="roundcmd">
                        <label for="input">Please click "<code>Add cmds for PPAT test</code>" if you need input commmands</label></br>
                        <button class="btn btn-primary btn-wuxia" onclick="add_cmd(this)">Add cmds for PPAT test</button>
                    </div>
            <br/>
            </div>
    </div>
<!--top-->
</div>
<footer>
    <a class="btn btn-wuxia btn-primary" onclick="trigger_ppat()">Trigger PPAT</a>
</footer>
<script>

/*
    collect job info and trigger job
*/
function trigger_ppat(){
    var device = $("select[name='Device']").val();
    var blf = $("select[name='Blf']").val();
    var purpose = $("#purpose").val();
    var image_path = $("#image_path").val();
    var hw = $('input[name=hwmodule]:checked').val();

    var image_files = "";
    $("#imgFileUpload ul").find("li").each(function(){
        var fileName = $(this).find(".plupload_file_name span").html();
        if(fileName != undefined){
             image_files += fileName + ",";
            //console.log($(this).find(".plupload_file_name span").html()); //get upload file name
            //console.log($(this).find(".plupload_file_status").html()); //file upload status
            if($(this).find(".plupload_file_status").html() != "100%"){
                alert("File upload not finished yet!!!");
            }
        }
    });

    var test_files = "";
    $("#testFileUpload ul").find("li").each(function(){
        var fileName = $(this).find(".plupload_file_name span").html();
        if(fileName != undefined){
             test_files += fileName + ",";
            //console.log($(this).find(".plupload_file_name span").html()); //get upload file name
            //console.log($(this).find(".plupload_file_status").html()); //file upload status
            if($(this).find(".plupload_file_status").html() != "100%"){
                alert("File upload not finished yet!!!");
            }
        }
    });

    //collect test case list
    var scenarios = new Array();

    //ap scenarios
    var ap_scenario_loop = $("#loopscenario").val();
    $("#ap_table").find("input").each(function(){
        if($(this).prop("checked") && $(this).attr("name")) {
            var scenario_info = new Object();
            scenario_info.name = $(this).attr("text");
            var property = new Object();
            property.count = ap_scenario_loop;
            scenario_info.property = property;
            scenarios.push(scenario_info);
        }
    });

    //cp scenarios
    var cp_scenario_loop = $("#loopcpscenario").val();
    $("#cp_table").find("input").each(function(){
        if($(this).prop("checked") && $(this).attr("name")) {
            var scenario_info = new Object();
            scenario_info.name = $(this).attr("text");
            var property = new Object();
            property.count = cp_scenario_loop;
            scenario_info.property = property;
            scenarios.push(scenario_info);
        }
    });

    //performance scenarios
    var performance_loop = $("#loopperfscenario").val();
    $("#performance_table").find("input").each(function(){
        if($(this).prop("checked") && $(this).attr("name")) {
            var scenario_info = new Object();
            scenario_info.name = $(this).attr("text");
            var property = new Object();
            property.count = performance_loop;
            scenario_info.property = property;
            scenarios.push(scenario_info);
        }
    });

    //round pp info
    var round_pp_infos = new Object();
    var cpu0_info = new Object();
    cpu0_info.CoreNum = "";
    cpu0_info.Frequency = "";
    $(".cpu0").find("input").each(function(){
        if($(this).prop("checked")){
            var type = $(this).attr("value");
            if(type == "CoreNum"){
                cpu0_info.CoreNum += $(this).attr("text") + ",";
            }else if(type == "Frequency"){
                cpu0_info.Frequency += $(this).attr("text") + ",";
            }
        }
    });
    if(cpu0_info.CoreNum != "" || cpu0_info.Frequency != ""){
        round_pp_infos.cpu0 = cpu0_info;
    }

    var cpu4_info = new Object();
    cpu4_info.CoreNum = "";
    cpu4_info.Frequency = "";
    $(".cpu4").find("input").each(function(){
        if($(this).prop("checked")){
            var type = $(this).attr("value");
            if(type == "CoreNum"){
                cpu4_info.CoreNum += $(this).attr("text") + ",";
            }else if(type == "Frequency"){
                cpu4_info.Frequency += $(this).attr("text") + ",";
            }
        }
    });
    if(cpu4_info.CoreNum != "" || cpu4_info.Frequency != ""){
        round_pp_infos.cpu4 = cpu4_info;
    }

    var gpu0_info = new Object();
    gpu0_info.Frequency = "";
    $(".gpu0").find("input").each(function(){
        if($(this).prop("checked")){
            gpu0_info.Frequency += $(this).attr("text") + ",";
        }
    });
    if(gpu0_info.Frequency != ""){
        round_pp_infos.cpu4 = gpu0_info;
    }

    var gpu1_info = new Object();
    gpu1_info.Frequency = "";
    $(".gpu1").find("input").each(function(){
        if($(this).prop("checked")){
            gpu1_info.Frequency += $(this).attr("text") + ",";
        }
    });

    if(gpu1_info.Frequency != ""){
        round_pp_infos.gpu1 = gpu1_info;
    }

    var vpu0_info = new Object();
    vpu0_info.Frequency = "";
    $(".vpu0").find("input").each(function(){
        if($(this).prop("checked")){
            vpu0_info.Frequency += $(this).attr("text") + ",";
        }
    });

    if(vpu0_info.Frequency != ""){
        round_pp_infos.vpu0 = vpu0_info;
    }

    var vpu1_info = new Object();
    vpu1_info.Frequency = "";
    $(".gpu1").find("input").each(function(){
        if($(this).prop("checked")){
            vpu1_info.Frequency += $(this).attr("text") + ",";
        }
    });

    if(vpu1_info.Frequency != ""){
        round_pp_infos.vpu1 = vpu1_info;
    }

    var ddr_info = new Object();
    ddr_info.Frequency = "";
    $(".ddr").find("input").each(function(){
        if($(this).prop("checked")){
            ddr_info.Frequency += $(this).attr("text") + ",";
        }
    });

    if(ddr_info.Frequency != ""){
        round_pp_infos.ddr = ddr_info;
    }

    //round cmd
    var round_cmd_infos = new Array();
    $("#roundcmd").find("textarea").each(function(){
        var cmd_info = new Object();
        cmd_info.description = $(this).prev("input").val();
        cmd_info.commands = $(this).val().replace(/[\n]/ig,';').replace(/\"/ig, '&quot;');
        if(!cmd_info.commands == ""){
            round_cmd_infos.push(cmd_info);
        }
    });

    var testcase = new Object();
    if(scenarios.length == 0){
        alert("Please at least choose one test cases.");
        return;
    }
    testcase.TestCaseList = scenarios;
    var hasProp = false;
    for (var prop in round_pp_infos){
        hasProp = true;
        break;
    }
    if(hasProp){
        testcase.roundpp = round_pp_infos;
    }
    if(round_cmd_infos.length > 0){
        testcase.roundcmd = round_cmd_infos;
    }
    if(image_files != "" || test_files != ""){
        testcase.folder = "<%= @now %>";
         if(test_files != ""){
            testcase.test_files = test_files;
        }
        if(image_files != ""){
            testcase.image_files = image_files;
        }
    }

    var json = JSON.stringify(testcase);
    //console.log($("#imgFileUpload ul li"));
    //console.log($("#image_path").val() + $("#purpose").val() + $("select[name='Blf']").val() + $("select[name='Device']").val());

    $.ajax({
        type: "POST",
        headers: {
            'X-CSRF-Token': '<%= form_authenticity_token.to_s %>'
          },
        url: "trigger",
        data:{device:device, blf:blf, purpose:purpose, assigner:"<%= get_cur_user %>@marvell.com", image_path:image_path, hw:hw, testcase:json},
        success: function(msg){
            window.location = "/query/index"
        }
    });
}

function add_cmd(th){
    $(th).before("<label class=\"inline\" for=\"input\">Description of set of cmds:</label>\
                <input class=\"input-xlarge inline\" type=\"text\" />\
                <textarea class=\"input-xxlarge\" rows=\"5\"></textarea><br/>");
}

function show(id){
    $("#" + id).css("display", "block");
}

$(document).ready(function() {

    if("<%= get_cur_user %>" == ""){
        alert("Please log in with your windows account!");

            window.location = "/log/in";
    }
    $('.plupload').pluploadQueue({
        runtimes : 'html5,gears,flash,silverlight,browserplus',
        url : 'upload?dir=<%= @now %>',
        resize : {width : 320, height : 440, quality : 90},
        flash_swf_url : 'js/plugins/plUpload/plupload.flash.swf',
        silverlight_xap_url : 'js/plugins/plUpload/plupload.silverlight.xap'
    });
    $(".plupload_header").remove();
    $(".plupload_progress_container").addClass("progress").addClass('progress-striped');
    $(".plupload_progress_bar").addClass("bar");
    $(".plupload_button").each(function(e){
        if($(this).hasClass("plupload_add")){
            $(this).attr("class", 'btn btn-primary btn-wuxia pl_add btn-small');
        } else {
            $(this).attr("class", 'btn btn-success btn-wuxia pl_start btn-small');
        }
    });

});

function choose_test(){
    var module = $("#device input[type='radio']:checked").val()
    var device = $("select[name='Device']").val();
    var test_type = $("select[name='TestType']").val();
    var update_tc_url = "update_testcase?device=" + device + "&type=" + test_type + "&module=" + module;
    $.ajax({
        type: "GET",
        url: update_tc_url,
        success: function(msg){
        }
    });
}

function update_testcases(deviceName){
    var get_device_url = "get_device?module=" + deviceName;
    $.ajax({
        type: "GET",
        url: get_device_url,
        success: function(msg){
        }
    });
}

function change_category_state(node){
    var catogry_nodes = $(node).parentsUntil("table").parent().find("tbody");
    if($(node).is(':checked')){//checked
        catogry_nodes.each(function(){
            $(this).find(":checkbox").each(function(){
                $(this).prop("checked", true);
            });
        });
    }else{
        catogry_nodes.each(function(){
            $(this).find(":checkbox").each(function(){
                $(this).prop("checked", false);
            });
        });
    }
}

/*when click case checkbox, need update category and all checkbox state */
function change_all_and_category_state(node){
    var catogry_node = $(node).parentsUntil("tr").siblings(".category").find(":checkbox");
    if($(node).is(':checked')){//checked
        var check_category = true;
        $(node).parentsUntil("tr").siblings("div").each(function(){
            $(this).find(":checkbox").each(function(){
                check_category = check_category && $(this).is(':checked');
            });
        });
        //update category checkbox status
        if(check_category){
            catogry_node.prop("checked", true);
            update_all_state_after_category(catogry_node,$(node).is(':checked'));
        }else{
            catogry_node.prop("checked", false);
            update_all_state_after_category(catogry_node,$(node).is(':checked'));
        }

    }else{//unchecked
        catogry_node.prop("checked", false);
        update_all_state_after_category(catogry_node,$(node).is(':checked'));
    }
}

function change_all_and_case_state(node){
    var node_all = $(node).parentsUntil("table").parent().find("thead :checkbox");
    if($(node).is(':checked')){//checked
        $(node).parent("td").siblings(".case").find(":checkbox").each(function(){
            $(this).prop("checked", true);
        });

    }else{//unchecked
        $(node).parent("td").siblings(".case").find(":checkbox").each(function(){
            $(this).prop("checked", false);
        });
        node_all.prop("checked", false);
    }
    //update check all state
    update_all_state_after_category(node,$(node).is(':checked'));
}

function update_all_state_after_category(category,state){
    var node_all = $(category).parentsUntil("table").parent().find("thead :checkbox");
    if(state){
        //update check all state
        var check_all = true;
        $(category).parent("td").parent("tr").siblings().children(".category").each(function(){
            check_all = check_all && $(this).find(":checkbox").is(':checked');
        });
        if(check_all){
            node_all.prop("checked", true);
        }else{
            node_all.prop("checked", false);
        }
    }else{
        node_all.prop("checked", false);
    }
}
 function Image_Path_IndexOf(){
    var obj = $("#image_path");//get text by id.
    var right = obj.width(); //get  text's width.
    var image_path_s = $("#image_path").val().split("/").length;//get text's length by spllit "/".
    var android_l ="";//When in the "android" directory get  li click date.
    var plarform_l ="";//When in the "platform" directory get  li click date.
    var list ="";// When is indexof the list  in li show.
    var li_list =new Array();//Get li date by split "/".
    var li_lists = new Array();//The input child characters corresponding to the main characters.
    var text_v = obj.val().replace("/autobuild/android/","");//The input child characters.
    $("#on_change").html("<%android_list.uniq.each do |android_list|%><li value='<%=android_list%>/'' id='1'><%=android_list%>/</li><%end%>");
    li_list = $("#on_change li").text().split("/");
   /* get child characters corresponding to the main characters to li_lists */
    for(var i=0; i<li_list.length;i++){
        if(li_list[i].indexOf(text_v)>-1){
            li_lists .push(li_list[i]+"/");
        }
    }
    /*the  indexof the list  in li show by list*/
    for(var j=0;j<li_lists.length;j++){
        list+="<li>"+li_lists[j]+"</li>";
    }
    if(li_lists.length==1){
        $("#image_path").val("/autobuild/android/"+li_lists);
    }
    $("#on_change").html(list);
    $("#on_change").css({'margin-left':"104px",'margin-top':'98px','width':right });
    /*if input text's length <4 the input text's value change to "/autobuild/android/"*/
    if(image_path_s<4){
        $("#image_path").val("/autobuild/android/");
    }
    /*if input text's length =5 Send home directory for subdirectories*/
    if(image_path_s==5){
        var t_list = new Array();
        t_list = $("#image_path").val().split("/");
        $.ajax({
            type: "GET",
            url: 'get_platform_list?android_l='+t_list[3]+",",
            success: function(msg){
            }
        });
    }
    if($("#image_path").val()=="/autobuild/android/"||image_path_s>=4){
        $("#on_change").show();
        $("li").click(function(){
            android_l=$(this).text();
            $("#image_path").val("/autobuild/android/"+android_l);
                $.ajax({
                    type: "GET",
                    url: 'get_platform_list?android_l='+android_l.split("/"),
                    success: function(msg){
                    }
                });
            });
    }
 }
</script>
