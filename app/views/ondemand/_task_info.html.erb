<script>

/* Default class modification */
$.extend( $.fn.dataTableExt.oStdClasses, {
	"sWrapper": "dataTables_wrapper form-inline"
} );
/* API method to get paging information */
$.fn.dataTableExt.oApi.fnPagingInfo = function ( oSettings )
{
	return {
		"iStart":         oSettings._iDisplayStart,
		"iEnd":           oSettings.fnDisplayEnd(),
		"iLength":        oSettings._iDisplayLength,
		"iTotal":         oSettings.fnRecordsTotal(),
		"iFilteredTotal": oSettings.fnRecordsDisplay(),
		"iPage":          Math.ceil( oSettings._iDisplayStart / oSettings._iDisplayLength ),
		"iTotalPages":    Math.ceil( oSettings.fnRecordsDisplay() / oSettings._iDisplayLength )
	};
}

/* Bootstrap style pagination control */
$.extend( $.fn.dataTableExt.oPagination, {
	"bootstrap": {
		"fnInit": function( oSettings, nPaging, fnDraw ) {
			var oLang = oSettings.oLanguage.oPaginate;
			var fnClickHandler = function ( e ) {
				e.preventDefault();
				if ( oSettings.oApi._fnPageChange(oSettings, e.data.action) ) {
					fnDraw( oSettings );
				}
			};

			$(nPaging).addClass('pagination').append(
				'<ul>'+
					'<li class="prev disabled"><a href="#">&larr; '+oLang.sPrevious+'</a></li>'+
					'<li class="next disabled"><a href="#">'+oLang.sNext+' &rarr; </a></li>'+
				'</ul>'
			);
			var els = $('a', nPaging);
			$(els[0]).bind( 'click.DT', { action: "previous" }, fnClickHandler );
			$(els[1]).bind( 'click.DT', { action: "next" }, fnClickHandler );
		},

		"fnUpdate": function ( oSettings, fnDraw ) {
			var iListLength = 5;
			var oPaging = oSettings.oInstance.fnPagingInfo();
			var an = oSettings.aanFeatures.p;
			var i, j, sClass, iStart, iEnd, iHalf=Math.floor(iListLength/2);

			if ( oPaging.iTotalPages < iListLength) {
				iStart = 1;
				iEnd = oPaging.iTotalPages;
			}
			else if ( oPaging.iPage <= iHalf ) {
				iStart = 1;
				iEnd = iListLength;
			} else if ( oPaging.iPage >= (oPaging.iTotalPages-iHalf) ) {
				iStart = oPaging.iTotalPages - iListLength + 1;
				iEnd = oPaging.iTotalPages;
			} else {
				iStart = oPaging.iPage - iHalf + 1;
				iEnd = iStart + iListLength - 1;
			}

			for ( i=0, iLen=an.length ; i<iLen ; i++ ) {
				// Remove the middle elements
				$('li:gt(0)', an[i]).filter(':not(:last)').remove();

				// Add the new list items and their event handlers
				for ( j=iStart ; j<=iEnd ; j++ ) {
					sClass = (j==oPaging.iPage+1) ? 'class="active"' : '';
					$('<li '+sClass+'><a href="#">'+j+'</a></li>')
						.insertBefore( $('li:last', an[i])[0] )
						.bind('click', function (e) {
							e.preventDefault();
							oSettings._iDisplayStart = (parseInt($('a', this).text(),10)-1) * oPaging.iLength;
							fnDraw( oSettings );
						} );
				}

				// Add / remove disabled classes from the static elements
				if ( oPaging.iPage === 0 ) {
					$('li:first', an[i]).addClass('disabled');
				} else {
					$('li:first', an[i]).removeClass('disabled');
				}

				if ( oPaging.iPage === oPaging.iTotalPages-1 || oPaging.iTotalPages === 0 ) {
					$('li:last', an[i]).addClass('disabled');
				} else {
					$('li:last', an[i]).removeClass('disabled');
				}
			}
		}
	}
});

/* Table #example */
$(document).ready(function() {
	$('#task_list').dataTable( {
		"processing": true,
		"serverSide": true,
		"ajax": $('#task_list').data('source'),
		"pagingType": "bootstrap"
	});
	$("#task_list tbody").delegate("tr td:not(:last)", "click", function() {
		var id = $(this).parent().find("td:nth-child(2)").text();
		update_scenario_by_task(id);
		$(this).parent().css("background", "#AFDCF8");
		$(this).parent().siblings().each(function(){
			$(this).css("background", "#fff");
		});
	});
	$("#task_list tbody").delegate("tr td:last-child", "click", function() {
		var id = $(this).parent().find("td:nth-child(2)").text();
		add_task_scenarios_to_cart(id);
		$(this).find("span").removeClass(" icon-refresh");
		$(this).find("span").addClass("icon-ok");
	});
});

function update_scenario_by_task(task_id){
	var task_url = "/ondemand/get_task_detail?task_id=" + task_id;
	$.ajax({
		type: "GET",
		url: task_url,
		success: function(msg){
			$("#task_scenario").html("");
			$("#task_scenario").html(msg);
		}
	});
}

function add_task_scenarios_to_cart(task_id) {
	var record_list_url = "/record_lists/create_by_task";
	$.ajax({
		type: "POST",
		data: "task_id=" + task_id,
		headers: {
		    'X-CSRF-Token': '<%= form_authenticity_token.to_s %>'
		  },
		url: record_list_url,
		success: function(msg){
			$("#extruderRight").setMbExtruderContent({
                		url:"/carts"
            });
		}
	});
}
</script>
<table class="datatable table table-wuxia table-bordered" id="task_list" data-source="/ondemand/get_task">
	<thead>
		<tr>
			<th>ID</th>
			<th>Task ID</th>
			<th>Finished At</th>
			<th>Platform</th>
			<th>Device</th>
			<th>Branch</th>
			<th>Purpose</th>
			<th>Submitter</th>
			<th>Compare</th>
		</tr>
	</thead>
	<tbody>
	</tbody>
</table>